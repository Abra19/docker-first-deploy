  - hosts: all
    gather_facts: no
    tasks:
      # Создаем общую сеть
      # Контейнеры добавленные в эту сеть, могут обращаться друг к другу по имени контейнера,
      # который становится dns именем
      - community.docker.docker_network:
          name: devops-example
      
      - community.docker.docker_container:
          name: app # имя используется как домен
          #image: "abra19/docker-first-deploy-app:{{ version }}"
          image: "abra19/docker-first-deploy-app:latest"
          restart_policy: always
          state: started
          networks: # Добавляем контейнер в сеть
            - name: devops-example
          ports: # Больше не нужно выставлять наружу, потому что доступ идет через Caddy
            # - 3000:3000
          env:
            NODE_ENV: production
            SERVER_MESSAGE: "HELLO ABRA19!"

      # - community.docker.docker_container:
      #     name: caddy # имя используется как домен
      #     #image: "abra19/docker-first-deploy-caddy:{{ version }}"
      #     image: "abra19/docker-first-deploy-caddy:latest"
      #     restart_policy: always
      #     state: started
      #     networks: # Добавляем контейнер в сеть
      #       - name: devops-example
      #     ports:
      #       - 80:80
      #       - 443:443
  
  
  - hosts: web1
    tasks:
      - community.docker.docker_container:
          name: app # имя используется как домен
          #image: "abra19/docker-first-deploy-app:{{ version }}"
          image: "abra19/docker-first-deploy-app:latest"
          restart_policy: always
          state: started
          networks: # Добавляем контейнер в сеть
            - name: devops-example
          ports: # Больше не нужно выставлять наружу, потому что доступ идет через Caddy
            # - 3000:3000
          env:
            NODE_ENV: production
            SERVER_MESSAGE: "HELLO ABRA19 from WEB111!"

    
  - hosts: web2
    tasks:
      - community.docker.docker_container:
          name: app # имя используется как домен
          #image: "abra19/docker-first-deploy-app:{{ version }}"
          image: "abra19/docker-first-deploy-app:latest"
          restart_policy: always
          state: started
          networks: # Добавляем контейнер в сеть
            - name: devops-example
          ports: # Больше не нужно выставлять наружу, потому что доступ идет через Caddy
            # - 3000:3000
          env:
            NODE_ENV: production
            SERVER_MESSAGE: "HELLO ABRA19 from WEB222!"